@import "../import";
@mixin size-avatar($size){
    min-width: $size;
    min-height: $size;
    height: $size;
    width: $size;
}

.m-avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    cursor: pointer;
    > img {
        min-width: 100%;
        min-height: 100%;
        max-width: 100%;
        max-height: 100%;
    }
    //尺寸
    @each $name, $value in $--Size-avatar {
        &.#{$name} {
            @include size-avatar(d($value));
        }
    }
    // shape
    &.circle {
        border-radius: map-get($map: $--Radius, $key: circle);
        > img {
            border-radius: map-get($map: $--Radius, $key: circle);
        }
    }
    &.round {
        border-radius: map-get($map: $--Radius, $key: round);
        > img {
            border-radius: map-get($map: $--Radius, $key: round);
        }
    }
    &.corner {
        border-radius: map-get($map: $--Radius, $key: corner);
        > img {
            border-radius: map-get($map: $--Radius, $key: corner);
        }
    }
    &.square {
        border-radius: 0;
    }
    // variety 
    &.outline {
        border-width: 2px;
        border-style: solid;
    }
    
    // 背景颜色继承utils .bg-name-value
    // 颜色继承utils .color-name-value
    // 阴影继承utils .shadow-name-value
}